[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "GF0604 Procesamiento de datos geográficos 2023-I",
    "section": "",
    "text": "Programa del curso\nLos siguientes documentos contienen el programa del curso, para los grupos 01 y 02, según el formato definido por la Escuela de Geografía de la Universidad de Costa Rica.\n\nGrupo 01\nGrupo 02\n\n\n\nVersiones anteriores del curso\nEste sitio web corresponde al curso impartido durante el primer lectivo de 2023. Para consultar las versiones de otros años y ciclos lectivos, puede visitar:\n\n2022-I\n2021-I\n2020-I\n\n\n\nInformación de contacto\nSi tiene alguna pregunta o comentario sobre este curso, por favor contacte a:\n\nManuel Vargas - manuel.vargas_d@ucr.ac.cr\nProfesor\nUniversidad de Costa Rica,\nCiudad Universitaria Rodrigo Facio,\nSan Pedro de Montes de Oca,\nCosta Rica.\n\nLos contenidos de este curso, a menos que se especifique de otra forma, se comparten mediante una licencia de Creative Commons Reconocimiento-CompartirIgual 4.0 Internacional."
  },
  {
    "objectID": "parte-i-introduccion-programacion_computadoras.html",
    "href": "parte-i-introduccion-programacion_computadoras.html",
    "title": "I - Introducción a la programación de computadoras",
    "section": "",
    "text": "2 Interacción humano-computadora"
  },
  {
    "objectID": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html",
    "href": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html",
    "title": "1  Pensamiento computacional, arquitectura de computadoras y lenguajes de programación",
    "section": "",
    "text": "Una computadora es una máquina que ejecuta secuencias de instrucciones, llamadas programas. Los programas reciben datos de entrada, los procesan y generan salidas. Pueden modificarse sin necesidad de alterar los componentes físicos de la computadora.\nLas computadoras ayudan a resolver problemas de muy diversos tipos. El pensamiento computacional es un enfoque para la resolución de problemas basado en conceptos y métodos de las ciencias de la computación. Sus principios fundamentales son:\n\nDescomposición: división de un problema en subproblemas más pequeños.\nReconocimiento de patrones: búsqueda de similitudes en los problemas.\nAbstracción: identificación de la información que se necesita y filtrado de la que no se necesita para resolver un problema.\nAlgoritmos: descripción, paso por paso, de la solución a un problema.\n\nLas computadoras modernas están construídas con base en circuitos integrados (CI), también llamados chips o microchips. Los CI procesan información digital (que usa valores discretos), la cual generalmente es binaria (i.e. de dos valores). Los CI de una computadora procesan dos estados correspondientes a dos niveles de tensión eléctrica: alto y bajo. Estos estados se representan con 0 y 1. Esto facilita la aplicación de la lógica binaria y de la aritmética binaria.\nDurante el período entre las guerras mundiales, Allan Turing desarrolló la máquina de Turing, un dispositivo teórico que manipula símbolos de una cinta de acuerdo con una tabla de reglas. La máquina de Turing simula el funcionamiento de un algoritmo y los conceptos de entrada, procesamiento y salida. En 1945, John von Neumann propuso un concepto conocido como programa almacenado, en el cual los datos y los programas se almacenan en una estructura llamada memoria, separada del hardware que ejecuta las instrucciones. Este esquema permite que las computadoras sean más fáciles de reprogramar y es conocido actualmente como arquitectura de von Neumann.\nEl lenguaje máquina es un conjunto de instrucciones binarias interpretables por la unidad central de procesamiento (CPU) de una computadora. Cada CPU tiene su propio lenguaje máquina. Un programa consiste de una secuencia de instrucciones en lenguaje máquina.\nDebido a que programar una computadora en lenguaje máquina es excesivamente lento y complicado, en la década de 1950 comenzaron a crearse lenguajes de programación que, en lugar de unos y ceros, consisten de instrucciones formadas por palabras, usualmente en idioma inglés. Existe una gran variedad de lenguajes de programación que han sido creados con diversos fines: científicos, comerciales, educacionales y otros.\nScratch es un lenguaje de programación orientado a educación. Fue desarrollado en 2003 por el MIT Media Lab y es administrado por la Fundación Scratch, una organización sin fines de lucro que lo facilita de manera gratuita."
  },
  {
    "objectID": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html#trabajo-previo",
    "href": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html#trabajo-previo",
    "title": "1  Pensamiento computacional, arquitectura de computadoras y lenguajes de programación",
    "section": "1.2 Trabajo previo",
    "text": "1.2 Trabajo previo\n\n1.2.1 Lecturas\nWing, J. M. (2006). Computational thinking. Communications of the ACM, 49(3), 33-35. https://doi.org/10.1145/1118178.1118215"
  },
  {
    "objectID": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html#diapositivas",
    "href": "01-pensamiento_computacional-arquitectura_computadoras-lenguajes_programacion.html#diapositivas",
    "title": "1  Pensamiento computacional, arquitectura de computadoras y lenguajes de programación",
    "section": "1.3 Diapositivas",
    "text": "1.3 Diapositivas\nPensamiento computacional, arquitectura de computadoras y lenguajes de programación"
  },
  {
    "objectID": "02-interaccion_humano_computadora.html#introducción",
    "href": "02-interaccion_humano_computadora.html#introducción",
    "title": "2  Interacción humano-computadora",
    "section": "2.2 Introducción",
    "text": "2.2 Introducción\nLa interacción humano-computadora (IHC) es un área de investigación dedicada al diseño y uso de la tecnología computacional. Esta interacción se realiza a través de interfaces. La IHC se sitúa en la intersección de varias disciplinas que incluyen ciencias de la computación, ciencias de la conducta, diseño y estudios de medios, entre otras. Los investigadores de IHC estudian la manera en la que los humanos interactúan con las computadoras y diseñan tecnologías para mejorar esa interacción.\nLa IHC enfatiza que, a diferencia de otras máquinas y herramientas con usos más limitados, las computadoras tienen aplicaciones muy diversas que implican un “diálogo” más complejo con los usuarios."
  },
  {
    "objectID": "02-interaccion_humano_computadora.html#interfaces-de-usuario",
    "href": "02-interaccion_humano_computadora.html#interfaces-de-usuario",
    "title": "2  Interacción humano-computadora",
    "section": "2.3 Interfaces de usuario",
    "text": "2.3 Interfaces de usuario\nLa interfaz de usuario es el medio con el que el usuario puede comunicarse con una computadora (o, en general, con cualquier máquina o dispositivo). Las interfaces de usuario se diseñan para que sean fáciles de entender y de utilizar.\nLas interfaces de usuario pueden clasificarse en tres tipos:\n\nInterfaces de línea de comandos (CLI, del inglés, command-line interface).\nInterfaces gráficas de usuario (GUI, del inglés, graphical user interface).\nInterfaces naturales de usuario (NUI, del inglés, natural user interface).\n\nLa evolución de estos tipos de interfaces se ilustra en la Figura 2.1.\n\n\n\n\n\nFigura 2.1: Evolución de las interaces de usuario. Imagen de Marcecoro compartida a través de Wikimedia Commons.\n\n\n\n\n\n2.3.1 Interfaces de línea de comandos\nLas interfaces de línea de comandos (CLI) permiten a los usuarios dar indicaciones a la computadora por medio de líneas de texto correspondientes a comandos o instrucciones. Los comandos pueden introducirse interactivamente en algún tipo de entrada de texto (ej. el prompt de un sistema operativo) o, de manera más automatizada, a través de un archivo (ej. un script). La Figura 2.2 muestra la terminal del sistema operativo Ubuntu, como un ejemplo de CLI.\n\n\n\n\n\nFigura 2.2: Terminal del sistema operativo Ubuntu (Linux).\n\n\n\n\nEste tipo de interfaz existe casi desde los inicios de la computación y es superada en antigüedad solo por las tarjetas perforadas y otros mecanismos similares.\nLas CLI tienen la ventaja de que facilitan el desarrollo de procedimientos reproducibles y repetibles. Por otro lado, puede ser más complejas, especialmente para usuarios no experimentados.\n\n\n2.3.2 Interfaces gráficas de usuario\nLas interfaces gráficas de usuario (GUI) utilizan imágenes y otros objetos gráficos (ej. iconos) para representar la información y las acciones disponibles en la interfaz. Surgieron como una evolución de las CLI. Por ejemplo, muchos sistemas operativos desarrollaron primero sus CLI y luego GUI que permiten realizar acciones equivalentes a los comandos de las CLI. La Figura 2.3 muestra la interfaz gráfica del sistema operativo Ubuntu (Linux).\n\n\n\n\n\nFigura 2.3: Interfaz gráfica GNOME del sistema operativo Ubuntu (Linux).\n\n\n\n\nComo un precursor de las actuales GUI, suele mencionarse una interfaz de hipervículos desarrollada en el Stanford Research Institute, en la década de 1960 (se recomienda ver The Mother of All Demos, presented by Douglas Engelbart (1968)). Este concepto fue ampliado y trasladado a un entorno gráfico por los investigadores del Xerox PARC, en Palo Alto. Ahí se introdujeron conceptos como ventanas, casillas de verificación (checkboxes), botones de radio, menús y puntero del ratón. La interfaz fue implementada comercialmente en el computador Xerox Star 8010, en 1981.\nLas GUI son más amigables e intuitivas que las CLI, pero también pueden ser menos versátiles y menos aptas para reproducir procedimientos.\n\n\n2.3.3 Interfaces naturales de usuario\nEn las interfaces naturales de usuario (NUI), este interactúa con la computadora sin utilizar dispositivos como el ratón o el teclado, sino a través de movimientos, gestos o la voz, como en el caso de las pantallas multitáctiles o del control por reconocimiento del habla. Las NUI no requieren que el usuario aprenda el uso de nuevas tecnologías, ya que puede emplear habilidades ya conocidas. La Figura 2.4 muestra la consola de videojuegos Xbox 360 S, como un ejemplo de dispositivo con NUI.\n\n\n\n\n\nFigura 2.4: Consola Xbox 360 S. Imagen de James Pfaff (litheon) compartida a través de Wikimedia Commons."
  },
  {
    "objectID": "02-interaccion_humano_computadora.html#recursos-de-interés",
    "href": "02-interaccion_humano_computadora.html#recursos-de-interés",
    "title": "2  Interacción humano-computadora",
    "section": "2.4 Recursos de interés",
    "text": "2.4 Recursos de interés\nMarcel. (2012). The Mother of All Demos, presented by Douglas Engelbart (1968). https://www.youtube.com/watch?v=yJDv-zdhzMY"
  }
]